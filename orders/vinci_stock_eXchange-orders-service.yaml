openapi: 3.0.3
info:
  title: Vinci Stock eXchange Orders Service
  version: "1.0"
servers:
  - url: https://localhost:9003
    description: Local development server
paths:
  /orders:
    post:
      summary: Create a new order
      requestBody:
        description: Order to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orderToCreate"
      responses:
        200:
          description: Order created
        400:
          description: Invalid input, object invalid
        404:
          description: Owner or stock not found

    get:
        summary: Get all orders
        responses:
            200:
              description: Orders found
              content:
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/order"

  /orders/{order-id}:
    parameters:
      - name: order-id
        in: path
        description: Order id
        required: true
        schema:
          type: number
          format: integer
          example: 1

    get:
      summary: Get an order by id
      responses:
        200:
          description: Order found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        404:
          description: Order not found

    put:
      summary: Update an order
      requestBody:
        description: Order to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/order"
      responses:
        200:
          description: Order updated
        400:
          description: Invalid input, object invalid
        404:
          description: Order not found
        405:
          description: Order can't be updated if it's filled

    delete:
      summary: Delete an order
      responses:
        200:
          description: Order deleted
        404:
          description: Order not found
        405:
          description: Order can't be cancelled if it's partially filled or filled

  /orders/{order-id}/fill:
    parameters:
      - name: order-id
        in: path
        description: Order id
        required: true
        schema:
          type: number
          format: integer
          example: 1

    patch:
      summary: Fill an order
      responses:
        200:
          description: Order filled
        400:
          description: Invalid input, object invalid
        404:
          description: Order not found
        405:
          description: Order can't be filled if it's already filled


  /orders/accounts/{order-placer}:
    parameters:
      - name: owner
        in: path
        description: Order placer username
        required: true
        schema:
          type: string
        example: "Alice007"

    get:
      summary: Get all orders of an owner (account username)
      responses:
        200:
          description: Orders found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/order"
        404:
          description: Owner not found
        400:
          description: Invalid input, object invalid


  /orders/stocks/{stock-name}:
    parameters:
      - name: stock-name
        in: path
        description: Stock name
        required: true
        schema:
          type: string
        example: "LNRD"
      - name: side
        in: query
        description: Side of the order
        schema:
          type: string
          enum: [ BUY, SELL ]
        example: "BUY"

components:
  schemas:
    orderToCreate:
      type: object
      properties:
        order-placer:
          type: string
        stock-name:
          type: string
        quantity:
          type: number
          format: integer
        side:
          type: string
          enum: [ BUY, SELL ]
        type:
          type: string
          enum: [ MARKET, LIMIT ]
        price:
          type: number
          format: float
    order:
      type: object
      properties:
        order-id:
          type: number
          format: integer
        order-placer:
          type: string
        stock-name:
          type: string
        initial-quantity:
          type: number
          format: integer
        current-quantity:
          type: number
          format: integer
        side:
          type: string
          enum: [ BUY, SELL ]
        type:
          type: string
          enum: [ MARKET, LIMIT ]
        state:
          type: string
          enum: [ NEW, PARTIALLY_FILLED, FILLED ]
        price:
          type: number
          format: double
        creation-date:
          type: string
          format: date-time
        value-of-already-sold-stocks:
          type: number
          format: double



  
